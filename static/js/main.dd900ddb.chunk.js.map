{"version":3,"sources":["utils/API.js","components/EmpName.js","components/NameFilter.js","components/EmpContainer.js","App.js","index.js"],"names":["query","axios","get","EmpName","props","className","theName","map","emp","Fragment","name","first","last","dob","date","id","value","element","age","NameFilter","type","placeholder","onChange","handleInputChange","EmpContainer","state","originalResult","result","search","sortAscend","event","preventDefault","filterEmp","target","sortEmp","sort","a","b","setState","emps","filter","nameEmp","toUpperCase","includes","searchEmployees","API","then","res","data","results","catch","err","console","log","this","searcher","resulter","onClick","Component","App","ReactDOM","render","document","getElementById"],"mappings":"oPAGe,EACL,SAASA,GACf,OAAOC,IAAMC,IAJD,sDC4BDC,MA1Bf,SAAiBC,GACb,OACI,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAf,SACKD,EAAME,QAAQC,KAAI,SAACC,GAAD,OACf,eAAC,IAAMC,SAAP,WACI,kCAAMD,EAAIE,KAAKC,MAAQ,IAAMH,EAAIE,KAAKE,KAAtC,OACA,yBAFiBJ,EAAIK,IAAIC,KAAON,EAAIO,GAAGC,YAOnD,qBAAKX,UAAU,eAAf,SAEQD,EAAME,QAAQC,KAAI,SAAAU,GAAO,OACrB,eAAC,IAAMR,SAAP,WACI,8BAAIQ,EAAQJ,IAAIK,IAAhB,OACA,yBAFiBD,EAAQJ,IAAIC,KAAOG,EAAQF,GAAGC,gBCL5DG,MAXf,SAAoBf,GAChB,OACI,+BACI,uBAAOgB,KAAK,OAAOC,YAAY,iBAC3BC,SAAUlB,EAAMmB,kBAChBR,GAAG,gBCwFJS,E,4MAzFXC,MAAQ,CACJC,eAAgB,GAChBC,OAAQ,GACRC,OAAQ,GACRC,YAAY,G,EAGhBN,kBAAoB,SAAAO,GAChBA,EAAMC,iBACO,EAAKC,UAAUF,EAAMG,OAAOjB,Q,EAQ7CkB,QAAU,SAACJ,GAEF,EAAKL,MAAMI,WAMZ,EAAKJ,MAAME,OAAOQ,MAAK,SAAwBC,EAAGC,GAC9C,OAAOA,EAAExB,IAAIK,IAAMkB,EAAEvB,IAAIK,OAN7B,EAAKO,MAAME,OAAOQ,MAAK,SAAwBC,EAAGC,GAC9C,OAAOD,EAAEvB,IAAIK,IAAMmB,EAAExB,IAAIK,OASjC,EAAKoB,SAAS,CAAET,YAAa,EAAKJ,MAAMI,aACxC,EAAKS,SAAS,CAAEX,OAAQ,EAAKF,MAAME,U,EAGvCK,UAAY,SAACtB,GACT,IAAM6B,EAAO,EAAKd,MAAMC,eAAec,QAAO,SAAAhC,GAC1C,IAAIiC,EAAUjC,EAAIE,KAAKC,MAAQ,IAAMH,EAAIE,KAAKE,KAI9C,OAFA6B,EAAUA,EAAQC,eACGC,SAASjC,EAAKgC,kBAKvC,OADA,EAAKJ,SAAS,CAAEX,OAAQY,IACjBA,G,EAGXK,gBAAkB,WACdC,IACKC,MAAK,SAAAC,GAAG,OAAI,EAAKT,SAAS,CACvBZ,eAAgBqB,EAAIC,KAAKC,aAE5BH,MAAK,kBACF,EAAKR,SAAS,CACVX,OAAQ,EAAKF,MAAMC,oBAG1BwB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,kEA3C9BG,KAAKV,oB,+BA+CL,OACI,sBAAKvC,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,CAEIkB,kBAAmB+B,KAAK/B,kBACxBgC,SAAUD,KAAK7B,MAAMG,OACrB4B,SAAUF,KAAK7B,MAAME,WAI7B,sBAAKtB,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAf,SACI,wCAEJ,qBAAKA,UAAU,eAAf,SACI,wBAAQoD,QAASH,KAAKpB,QAAS7B,UAAU,kBAAzC,sCAIR,cAAC,EAAD,CACIC,QAASgD,KAAK7B,MAAME,gB,GAnFb+B,aCEZC,MAJf,WACE,OAAO,cAAC,EAAD,K,MCETC,IAASC,OAEP,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dd900ddb.chunk.js","sourcesContent":["import axios from \"axios\";\nconst BASEURL = \"https://randomuser.me/api/?results=50&seed=foobar\";\n\nexport default {\n  search: function(query) {\n    return axios.get(BASEURL);\n  }\n};\n","import React from \"react\";\n\n// This returns both name AND age\nfunction EmpName(props) {\n    return (\n        <div className=\"row\">\n            <div className=\"col col-md-6\">\n                {props.theName.map((emp) => (\n                    <React.Fragment key={emp.dob.date + emp.id.value}>\n                        <p> { emp.name.first + \" \" + emp.name.last} </p>\n                        <hr />\n                    </React.Fragment>\n                ))}\n            </div>\n\n            <div className=\"col col-md-6\">\n                {\n                    props.theName.map(element => (\n                        <React.Fragment key={element.dob.date + element.id.value}>\n                            <p>{element.dob.age} </p>\n                            <hr />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default EmpName;\n","import React from \"react\";\n\nfunction NameFilter(props) {\n    return (\n        <form>\n            <input type=\"text\" placeholder=\"Filter by name\"\n                onChange={props.handleInputChange}\n                id=\"searcher\">\n            </input>\n        </form>\n    );\n}\n\nexport default NameFilter;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport EmpName from \"./EmpName\";\nimport NameFilter from \"./NameFilter\";\n\nclass EmpContainer extends Component {\n    state = {\n        originalResult: [],\n        result: [],\n        search: \"\",\n        sortAscend: false\n    };\n\n    handleInputChange = event => {\n        event.preventDefault();\n        const emps = this.filterEmp(event.target.value);\n    };\n\n    // When this component mounts, search for employees\n    componentDidMount() {\n        this.searchEmployees();\n    }\n\n    sortEmp = (event) => {\n\n        if (!this.state.sortAscend) {\n            this.state.result.sort(function compareNumbers(a, b) {\n                return a.dob.age - b.dob.age;\n            });\n        }\n        else {\n            this.state.result.sort(function compareNumbers(a, b) {\n                return b.dob.age - a.dob.age;\n            });\n        }\n\n        this.setState({ sortAscend: !this.state.sortAscend });\n        this.setState({ result: this.state.result });\n    }\n\n    filterEmp = (name) => {\n        const emps = this.state.originalResult.filter(emp => {\n            let nameEmp = emp.name.first + \" \" + emp.name.last;\n\n            nameEmp = nameEmp.toUpperCase();\n            const incl = nameEmp.includes(name.toUpperCase());\n            return incl;\n        });\n\n        this.setState({ result: emps });\n        return emps;\n    };\n\n    searchEmployees = () => {\n        API.search()\n            .then(res => this.setState({\n                originalResult: res.data.results\n            }))\n            .then(() => (\n                this.setState({\n                    result: this.state.originalResult\n                })\n            ))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <NameFilter\n\n                        handleInputChange={this.handleInputChange}\n                        searcher={this.state.search}\n                        resulter={this.state.result}\n                    >\n                    </NameFilter>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col col-md-6\">\n                        <h3>Name</h3>\n                    </div>\n                    <div className=\"col col-md-6\">\n                        <button onClick={this.sortEmp} className=\"btn btn-success\">Age (click to sort)</button>\n                    </div>\n                </div>\n\n                <EmpName\n                    theName={this.state.result}>\n                </EmpName>\n            </div>\n        );\n    }\n}\n\nexport default EmpContainer;\n","import React from \"react\";\nimport EmpContainer from \"./components/EmpContainer\";\n\nfunction App() {\n  return <EmpContainer />;\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\n  <App />, document.getElementById('root')\n\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}